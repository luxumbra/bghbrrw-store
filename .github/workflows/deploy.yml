name: Smart Build and Deploy

on:
  push:
    branches:
      - main
      - feat/BOU-35-migrate-infra-to-dokploy  # Include current branch for testing
  workflow_dispatch:  # Allow manual triggering

jobs:
  # Detect which services have changes
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      cms: ${{ steps.filter.outputs.cms }}
      shared: ${{ steps.filter.outputs.shared }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'apps/backend/**'
              - 'docker-compose.backend.yml'
            frontend:
              - 'apps/frontend/**'
              - 'docker-compose.frontend.yml'
            cms:
              - 'apps/cms/**'
              - 'docker-compose.cms.yml'
            shared:
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - 'docker-compose.production.yml'
              - '.dockerignore'
              - '.github/workflows/**'

  # Build backend only if backend files changed
  build-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true' || needs.detect-changes.outputs.shared == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push backend image with multiple tags (server and worker use same image)
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./apps/backend
          file: ./apps/backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-server:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-server:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-worker:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-worker:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-backend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-backend:buildcache,mode=max

  # Build frontend only if frontend files changed
  build-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true' || needs.detect-changes.outputs.shared == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push frontend image
      - name: Build and push frontend (Next.js)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:buildcache,mode=max
          build-args: |
            NODE_ENV=production
            HOSTNAME="0.0.0.0"
            PORT=8000
            NEXT_PUBLIC_MEDUSA_BACKEND_URL=${{vars.NEXT_PUBLIC_MEDUSA_BACKEND_URL}}
            NEXT_PUBLIC_BASE_URL=${{vars.NEXT_PUBLIC_BASE_URL}}
            NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=${{secrets.MEDUSA_PUBLISHABLE_KEY}}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}}
            NEXT_PUBLIC_SANITY_PROJECT_ID=${{vars.NEXT_PUBLIC_SANITY_PROJECT_ID}}
            NEXT_PUBLIC_SANITY_DATASET=${{vars.NEXT_PUBLIC_SANITY_DATASET}}
            SANITY_API_TOKEN=${{secrets.SANITY_API_TOKEN}}

  # Build CMS only if CMS files changed
  build-cms:
    needs: detect-changes
    if: needs.detect-changes.outputs.cms == 'true' || needs.detect-changes.outputs.shared == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push CMS image
      - name: Build and push CMS
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/cms/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:buildcache,mode=max

  # Trigger deployments only after successful builds
  trigger-deployments:
    needs: [detect-changes, build-backend, build-frontend, build-cms]
    if: always() && github.ref == 'refs/heads/main' && (needs.build-backend.result == 'success' || needs.build-frontend.result == 'success' || needs.build-cms.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Dokploy Deployment
        run: |
          if [ ! -z "${{ secrets.DOKPLOY_WEBHOOK_URL }}" ]; then
            curl -X POST "${{ secrets.DOKPLOY_WEBHOOK_URL }}" \
              -H "Content-Type: application/json" \
              -d '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "repository": "${{ github.repository }}"}'
          else
            echo "DOKPLOY_WEBHOOK_URL not configured - skipping webhook trigger"
          fi