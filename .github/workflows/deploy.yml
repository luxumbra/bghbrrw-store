name: Build and Push Images

on:
  push:
    branches:
      - main
      - feat/BOU-35-migrate-infra-to-dokploy  # Include current branch for testing
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push backend server image
      - name: Build and push backend server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-server:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-server:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-server:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-server:buildcache,mode=max

      # Build and push backend worker image
      - name: Build and push backend worker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-worker:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-worker:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-worker:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-backend-worker:buildcache,mode=max

      # Debug environment variables
      - name: Debug environment variables
        run: |
          echo "Checking environment variables..."
          echo "NEXT_PUBLIC_SANITY_PROJECT_ID is set: ${{ vars.NEXT_PUBLIC_SANITY_PROJECT_ID != '' }}"
          echo "NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY secret is set: ${{ secrets.NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY != '' }}"

      # Build and push frontend image
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-frontend:buildcache,mode=max
          build-args: |
            NODE_ENV=production
            HOSTNAME="0.0.0.0"
            PORT=8000
            NEXT_PUBLIC_MEDUSA_BACKEND_URL=${{vars.NEXT_PUBLIC_MEDUSA_BACKEND_URL}}
            NEXT_PUBLIC_BASE_URL=${{vars.NEXT_PUBLIC_BASE_URL}}
            NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=${{secrets.MEDUSA_PUBLISHABLE_KEY}}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}}
            NEXT_PUBLIC_SANITY_PROJECT_ID=${{secrets.NEXT_PUBLIC_SANITY_PROJECT_ID}}
            NEXT_PUBLIC_SANITY_DATASET=${{secrets.NEXT_PUBLIC_SANITY_DATASET}}
            SANITY_API_TOKEN=${{secrets.SANITY_API_TOKEN}}

      # Build and push CMS image (if Dockerfile exists)
      - name: Check if CMS Dockerfile exists
        id: check_cms
        run: |
          if [ -f "./apps/cms/Dockerfile" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push CMS
        if: steps.check_cms.outputs.exists == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/cms/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:latest
            ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/boughandburrow-cms:buildcache,mode=max

      # Trigger Dokploy deployment via webhook (if configured)
      - name: Trigger Dokploy Deployment
        if: github.ref == 'refs/heads/main'
        run: |
          if [ ! -z "${{ secrets.DOKPLOY_WEBHOOK_URL }}" ]; then
            curl -X POST "${{ secrets.DOKPLOY_WEBHOOK_URL }}" \
              -H "Content-Type: application/json" \
              -d '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "repository": "${{ github.repository }}"}'
          else
            echo "DOKPLOY_WEBHOOK_URL not configured - skipping webhook trigger"
          fi